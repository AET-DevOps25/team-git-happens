version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql_server
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-githappens!}'
      MYSQL_DATABASE: course_compass
      MYSQL_USER: '${DB_USERNAME:-admin}'
      MYSQL_PASSWORD: '${DB_PASSWORD:-githappens!}'
    ports: []  # Remove external port exposure for security
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d  # Only needs the init scripts
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${DB_PASSWORD:-githappens!}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  client-app:
    image: ghcr.io/aet-devops25/team-git-happens/client:ec2-latest
    container_name: client_app
    restart: always
    ports:
      - "80:80"  # Map to standard HTTP port for production
    networks:
      - app_network
    depends_on:
      - course-service
      - authentication-service
      - review-service

  course-service:
    image: ghcr.io/aet-devops25/team-git-happens/course:${IMAGE_TAG:-latest}
    container_name: course_service_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_server:3306/course_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: '${DB_USERNAME:-admin}'
      SPRING_DATASOURCE_PASSWORD: '${DB_PASSWORD:-githappens!}'
      
      # Flyway configuration - Spring Boot will handle migrations
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
      SPRING_FLYWAY_VALIDATE_ON_MIGRATE: "true"
      
      # JPA configuration - validate mode for safety
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    networks:
      - app_network

  authentication-service:
    image: ghcr.io/aet-devops25/team-git-happens/authentication:${IMAGE_TAG:-latest}
    container_name: authentication_service_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_server:3306/auth_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: '${DB_USERNAME:-admin}'
      SPRING_DATASOURCE_PASSWORD: '${DB_PASSWORD:-githappens!}'
      
      # Flyway configuration - Spring Boot will handle migrations
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
      SPRING_FLYWAY_VALIDATE_ON_MIGRATE: "true"
      
      # JPA configuration - validate mode for safety
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    networks:
      - app_network

  review-service:
    image: ghcr.io/aet-devops25/team-git-happens/review:${IMAGE_TAG:-latest}
    container_name: review_service_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_server:3306/review_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: '${DB_USERNAME:-admin}'
      SPRING_DATASOURCE_PASSWORD: '${DB_PASSWORD:-githappens!}'
      
      # Flyway configuration - Spring Boot will handle migrations
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
      SPRING_FLYWAY_VALIDATE_ON_MIGRATE: "true"
      
      # JPA configuration - validate mode for safety
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    networks:
      - app_network
      
  recommendation-gateway:
    image: ghcr.io/aet-devops25/team-git-happens/recommendation-gateway:${IMAGE_TAG:-latest}
    container_name: recommendation_gateway
    restart: always
    environment:
      SERVER_PORT: 8080
      GENAI_API_URL: http://genai_service:8000
    networks:
      - app_network
    depends_on:
      - genai-service
      
  genai-service:
    image: ghcr.io/aet-devops25/team-git-happens/genai-service:${IMAGE_TAG:-latest}
    container_name: genai_service
    restart: always
    environment:
      API_URL: ${API_URL:-https://api.openai.com/v1/chat/completions}
      API_KEY: ${API_KEY:-your_openai_api_key}
      MODEL: ${MODEL:-gpt-3.5-turbo}
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
