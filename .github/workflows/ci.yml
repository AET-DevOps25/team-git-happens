name: CI - Continuous Integration

on:
  push:
    branches: [ main, develop, deployment-ec2 ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json

    - name: Install client dependencies
      run: |
        cd client
        npm ci

    - name: Run client linting
      run: |
        cd client
        npm run lint

    - name: Run client tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Test Spring Boot services
      run: |
        cd server/course-service
        ./gradlew test
        cd ../authentication-service
        ./gradlew test
        cd ../review-service
        ./gradlew test
        cd ../recommendation-gateway
        ./gradlew test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          client/coverage/
          server/*/build/reports/tests/

  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev-branch' || github.ref == 'refs/heads/deployment-ec2'
    
    outputs:
      image-tag: ${{ steps.meta.outputs.version }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push client image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: true
        tags: ghcr.io/${{ github.repository }}/client:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push course service image
      uses: docker/build-push-action@v5
      with:
        context: ./server/course-service
        push: true
        tags: ghcr.io/${{ github.repository }}/course:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push authentication service image
      uses: docker/build-push-action@v5
      with:
        context: ./server/authentication-service
        push: true
        tags: ghcr.io/${{ github.repository }}/authentication:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push review service image
      uses: docker/build-push-action@v5
      with:
        context: ./server/review-service
        push: true
        tags: ghcr.io/${{ github.repository }}/review:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push recommendation gateway image
      uses: docker/build-push-action@v5
      with:
        context: ./server/recommendation-gateway
        push: true
        tags: ghcr.io/${{ github.repository }}/recommendation-gateway:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push genai service image
      uses: docker/build-push-action@v5
      with:
        context: ./genai-service
        push: true
        tags: ghcr.io/${{ github.repository }}/genai:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Image Tag**: ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Images Built**: 6 application images" >> $GITHUB_STEP_SUMMARY
        echo "- **Migration Strategy**: Spring Boot embedded Flyway" >> $GITHUB_STEP_SUMMARY
