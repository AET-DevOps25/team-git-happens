name: CI - Continuous Integration

on:
  push:
    branches: [ main, develop, deployment-ec2 ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json

    - name: Install client dependencies
      run: |
        cd client
        npm ci

    - name: Run client linting
      run: |
        cd client
        npm run lint

    - name: Run client tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Test Spring Boot services
      run: |
        cd server/course-service
        ./gradlew test
        cd ../authentication-service
        ./gradlew test
        cd ../review-service
        ./gradlew test
        cd ../recommendation-gateway
        ./gradlew test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          client/coverage/
          server/*/build/reports/tests/

  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev-branch' || github.ref == 'refs/heads/deployment-ec2'
    
    outputs:
      image-tag: ${{ steps.meta.outputs.version }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build client image
      run: docker build -t ghcr.io/aet-devops25/team-git-happens/client:${GITHUB_SHA} ./client

    - name: Push client image
      run: docker push ghcr.io/aet-devops25/team-git-happens/client:${GITHUB_SHA}

    - name: Build course-service JAR
      run: |
        cd server/course-service
        ./gradlew build

    - name: Build course service image
      run: docker build -t ghcr.io/aet-devops25/team-git-happens/course:${GITHUB_SHA} ./server/course-service

    - name: Push course service image
      run: docker push ghcr.io/aet-devops25/team-git-happens/course:${GITHUB_SHA}

    - name: Build authentication service image
      run: docker build -t ghcr.io/aet-devops25/team-git-happens/authentication:${GITHUB_SHA} ./server/authentication-service

    - name: Push authentication service image
      run: docker push ghcr.io/aet-devops25/team-git-happens/authentication:${GITHUB_SHA}

    - name: Build review service image
      run: docker build -t ghcr.io/aet-devops25/team-git-happens/review:${GITHUB_SHA} ./server/review-service

    - name: Push review service image
      run: docker push ghcr.io/aet-devops25/team-git-happens/review:${GITHUB_SHA}

    - name: Build recommendation gateway image
      run: docker build -t ghcr.io/aet-devops25/team-git-happens/recommendation-gateway:${GITHUB_SHA} ./server/recommendation-gateway

    - name: Push recommendation gateway image
      run: docker push ghcr.io/aet-devops25/team-git-happens/recommendation-gateway:${GITHUB_SHA}

    - name: Build genai service image
      run: docker build -t ghcr.io/aet-devops25/team-git-happens/genai-service:${GITHUB_SHA} ./genai-service

    - name: Push genai service image
      run: docker push ghcr.io/aet-devops25/team-git-happens/genai-service:${GITHUB_SHA}

    - name: Build summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Image Tag**: ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Images Built**: 6 application images" >> $GITHUB_STEP_SUMMARY
        echo "- **Migration Strategy**: Spring Boot embedded Flyway" >> $GITHUB_STEP_SUMMARY
